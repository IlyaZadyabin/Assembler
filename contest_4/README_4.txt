Задача 04-2: Поиск подстроки в строке
Необходимо написать программу, которая считывает две строки (каждая содержит не более 1000 символов) и проверяет, не является ли одна из строк подстрокой другой. В случае, если первая строка является подстрокой второй, необходимо вывести на печать "1 2" (без кавычек), если вторая - подстрока первой, то "2 1", если ни одна строка не является подстрокой другой, необходимо вывести "0".

Гарантируется, что подаваемые строки различны.

Запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные
J442495N9H1WE9HYD2CP
9H1WE9HYD2
Результат работы
2 1
Входные данные
CPDZED4M0T
1WE9HYD2CPDZED4M0TH1
Результат работы
1 2
Входные данные
J442495N9H1WE9HYD2CP
DZED4M0TH1
Результат работы
0


Задача 04-4: Just another simple task
Вам требуется посчитать количество целых чисел во входном файле и вывести его на стандартный поток. Каждое целое число помещается в 32-х разрядный беззнаковый тип. Количество чисел не превосходит 100000

и не менее нуля.
Запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные в файле data.in
1 2 3
Результат работы
3 

Задача 04-7: Неостросоциальные строки
На входной поток подаётся сначала количество, а затем сами строки, разделённые пробелами или переводами строк. Подсчитайте количество различных строк и выведите на стандартный выходной поток. Длина строк не превосходит 10, количество строк не превосходит 500 и не менее нуля.

Запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные
3
abc cba abc
Результат работы
2

Задача 04-8: Отсортируй последовательность
Это скучная задача.

В текстовом файле input.txt задаётся последовательность знаковых целых 32х-битных чисел, разделённых проивольными комбинациями пробельных символов и символов перевода строки. Длина последовательности не превышает 1000 элементов. Требуется вывести отсортированную последовательность в файл output.txt. Для сортировки воспользуйтесь библиотечной функцией qsort

Запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные в файле input.txt
241 1 10
Результат работы в файле output.txt
1 10 241
Входные данные в файле input.txt
2 -1 0
Результат работы в файле output.txt
-1 0 2

Задача 04-11: 2-перемешивание
Последовательность ai состоит из N членов и задается формулой

ai = i
.
К данной последовательности M раз применяют следующее преобразование: все члены последовательности, начиная с члена равного bj (1-ый парметр преобразования) и до члена равного cj (2-ой параметр преобразования) переносятся в начало. Их относительный порядок не меняется, так же как и порядок членов стоящих до члена равного bj или после cj. Гарантируется, что член равный bj встречается в последовательности не позже члена равного cj.

Например, пусть исходная последовательность имела 7 членов и к ней было применено описанное преобразование с параметрами 4 и 6. Тогда получится последовательность (4, 5, 6, 1, 2, 3, 7). Если к этой последовательности применить преобразование с параметрами 5 и 2, то получится последовательность (5, 6, 1, 2, 4, 3, 7).

Требуется определить, какая последовательность получится в результате применения к исходной заданной серии преобразований.

Во входном файле input.txt записаны натуральные числа N и M, не превосходящие 105. За ними следуют M пар чисел - параметры преобразований.

В выходной файл output.txt выведите полученную последовательность.

Запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные в файле input.txt
7 1
4 6
Результат работы в файле output.txt
4 5 6 1 2 3 7
Входные данные в файле input.txt
7 2
4 6
5 2
Результат работы в файле output.txt
5 6 1 2 4 3 7
Входные данные в файле input.txt
7 3
4 6
5 2
1 7
Результат работы в файле output.txt
1 2 4 3 7 5 6

Задача 04-14: Сортировка списка
Во входном файле input.txt записана последовательность чисел. Числа в последовтельности целые, по модулю не превосходящие 109. Их количество не превышает 4000.

Требуется отсортировать данную последовательность по неубыванию и вывести результат в файл output.txt.

Указание: при решении данной задачи запрещается использовать массивы. Для хранения последовательности используйте однонаправленный или двунаправленный список.

Также запрещается использовать макросы ввода-вывода библиотеки io.inc. При вызове всех библиотечных функций стек должен быть выровнен по 16 байт.

Примеры
Входные данные в файле input.txt
2 4 1 3 5 8
Результат работы в файле output.txt
1 2 3 4 5 8
Входные данные в файле input.txt
-5 3 -2 1 0 -4 3
Результат работы в файле output.txt
-5 -4 -2 0 1 3 3

